'data processing' is very general data handling.  The data might not be sent anywhere but simply
be manipulated in the browser.

Any component that initiates data processing is a subclass of DataProcessorComponent.  These
components usually represent buttons in the UI.

'data transport processing' refers to any data processing that involves sending the data to an
external resource that returns a result.  All processing of this kind is handled by subclasses of
DataTransportProcessorService.

Any form <input> that self-validates during the 'blur' event is an instance of
ValidatingInputComponent.  ValidatingInputComponent depends on the interface ValidatingInput defined
in npm package '@writetome51/validating-inputs'.  ValidatingInput only represents an input of type
'text', 'password', or 'number'.

Any custom typescript decorators created by calling getClassModificationDecorator() have been
pre-transpiled into javascript files.  This is done to avoid an Angular build error which says
'Function calls are not supported in decorators...'.

There's an issue involving combining your own decorator(s) with @Injectable() decorator.
The workaround is detailed in src/app/injectable-decorator-workaround.ts.
