Conventions:
If a class method is referred to here by writing ClassName.method(), this is not implying
that the method is static. This convention refers to any method belonging to that class.


AlertService is app-wide alert message service.  AlertService is assigned a message by other
services.  AlertService only contains the alert message text.  AlertComponent displays it to user.
The AlertComponent is only used by AppComponent.

In the code, 'data operation processing' refers to any asynchronous processing of data that returns
a result.  All processing of this kind is handled by subclasses of DataOperationProcessorService.
DataOperationProcessorService.process() calls DataOperationProcessorService._getResult(), and passes
the result to ResultInterpreterService.interpret(result).  This checks if the result contains an
error message, and if so, the appropriate error handler is called.  If no error, the result is
passed to ResultProcessorService.process(result).

Any component that initiates data operation processing is a subclass of
DataOperationProcessorComponent.  These components usually represent buttons in the UI.

Any form <input> that self-validates during the 'blur' event is an instance of
ValidatingInputComponent.  ValidatingInputComponent depends on the interface ValidatingInput defined
in npm package '@writetome51/validating-inputs'.  ValidatingInput only represents an input of type
'text', 'password', or 'number'.

