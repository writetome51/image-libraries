Directives are classes providing UI content behavior.  Each has an assigned selector
(a custom element or element attribute).

Components are subclasses of Directives.  They represent UI content and/or provide its
behavior.  Each has an assigned html template.

Services are helpers that are injected into Directives, Components, or other Services
(though some are static and don't need to be injected).  Each has a specific purpose.
They are often used as singletons shared among multiple Directives, Components, and/or
other Services.

Modules contain Components, Directives, Services, and other Modules.
Directives and Components must be declared in a module's 'declarations' array.  This
makes them belong to that module.  If you want to use those Directives or Components in
other modules, you must list them in their module's 'exports' array, and import their
module into the destination module by listing it in the destination module's 'imports'
array.



12/15/2020

My Rest Api is built using MongoDB Realm (formerly Stitch).  MongoDB provides a Realm SDK for
programmatically communicating with your Realm app.  A year ago I tried using the Stitch web SDK and
 it didn't work (was never sure why), which is why i ended up creating the Rest API to communicate
 with Realm entirely using http webhooks.  But using webhooks hasn't been seamless because i've had
 to use a CORS proxy, which occasionally slows requests, and sometimes (on Sundays usually) doesn't
 respond at all.  So today I'm going to try some tests using the Realm SDK from inside this app.


12/19/2020

Realm SDK works well.  Switching to that.  Not using Rest API any more.


