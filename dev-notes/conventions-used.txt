Services

Each instance of a Service is referred to without 'Service' at the end.


Data Structures

Each class/object used as a data structure is named with 'Data' at the end, and their
filenames end with '.data.ts'.
Any reference to one of these data structures is named without 'Data' at the end.


Interfaces

The names of all files that define interfaces end with '.interface.ts'.


Usage of the words 'Process' and 'Processor'

'Process' refers to an entire cycle of these steps:
1. Getting an initial result from some code execution.
2. Checking that result for errors and, if any, executing tasks based on those errors.
3. If no errors, executing tasks based on the successful result.

'Processor' refers to a Service that runs a process.

Example:  'data transport process' is any process that involves data being sent to or
from an external resource.  All processing of this kind is handled by subclasses of
DataTransportProcessorService.


Usage of the words 'Execute' and 'Executor'

'Execute' refers to running ANY code.  It could be a process, or something much simpler.
'Executor' refers to a Service that runs an execution.


Load

Any use of the word 'load' is referring to the total pieces of data (each 'piece'
most likely being an object) the app is allowed to have stored in the browser at once.
For example, ImagesStorage.getAllLoad() retrieves N of all a user's images, where N is
the load size.


Subscribables (Observables)

The name of any variable or constant referencing a Subscribable (from Rxjs) ends with
'$'.


Path Aliases

Import statements that use a path beginning with '@' are aliases.  Many of those aliases
refer to files in  /node_modules.
Aliases to files created in this project are defined in  /tsconfig.json.


Label

The word 'label' is the preferred way of specifying a display name.
