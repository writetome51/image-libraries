Lazy-Loaded Angular Modules

Many Angular Modules in this project are instantiated via lazy-loading (by including the
Module's route in the requested url).  These Modules are found in
/src/app/routed-modules.


Backend Code

Because this app is intended to be deployed in a production environment where I have no
control over the server, all backend code is in the form of 'serverless functions'
deployed on an external cloud service.  Currently that service is MongoDB Realm.


Shared Entities

Any entity (class, interface, constant, etc.) used in multiple independent Modules is
found in src/app/shared.


Form Inputs

Any form <input> that self-validates during its 'blur' event is an instance of
AppValidatingFormInputComponent.  AppValidatingFormInputComponent depends on the
interface ValidatingInput (npm package @writetome51/validating-inputs).
ValidatingInput only represents an input of type 'text', 'password', or 'number'.


Services used in only one Module

A Module may use Services that are only used in that Module.  Usually that Module ——
let's call it ExampleModule —— will import a Module called ExampleServicesModule, and
those Services will have their @Injectable decorator written as:
@Injectable({providedIn: ExampleServicesModule})


Custom Class Decorators

Any class decorator I've created is an experiment.  Wherever they're used, I chose to use
them instead of implementing a constructor because that seemed messier.
